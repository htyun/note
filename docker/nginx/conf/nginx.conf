
#user  nobody;
# 工作进程的数量
worker_processes  auto;
# 最大打开文件数限制
worker_rlimit_nofile 100000;


events {
		# 轮询方式
		use epoll;
		# 工作进程的最大连接数量
    worker_connections  1024;
    # 客户端请求头部的缓冲区大小 查看系统分页可以使用 getconf PAGESIZE命令
    #client_header_buffer_size 4k;
    # 为打开文件指定缓存，默认是没有启用的，max指定缓存最大数量，建议和打开文件数一致，inactive是指经过多长时间文件没被请求后删除缓存 打开文件最大数量为我们再main配置的worker_rlimit_nofile参数
    #open_file_cache max=100000 inactive=60s;
    # 这个是指多长时间检查一次缓存的有效信息。如果有一个文件在inactive时间内一次没被使用，它将被移除
    #open_file_cache_valid 60s;
    # open_file_cache指令中的inactive参数时间内文件的最少使用次数，如果超过这个数字，文件描述符一直是在缓存中打开的，如果有一个文件在inactive时间内一次没被使用，它将被移除。
    #open_file_cache_min_uses 1;
    #打开同时接受多个新网络连接请求的功能。
    multi_accept on;
    #优化同一时刻只有一个请求而避免多个睡眠进程被唤醒的设置，on为防止被同时唤醒，默认为off，因此nginx刚安装完以后要进行适当的优化。
    accept_mutex on;
}


http {
    #include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
		access_log off;
		
		# 隐藏服务器名和版本信息
		server_tokens off;
    sendfile        on;
    #tcp_nopush     on;
    tcp_nopush on;
    tcp_nodelay on;
    
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Headers X-Requested-With;
    add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
    
    client_header_timeout 20;
    client_body_timeout 30;
    reset_timedout_connection on;
    send_timeout 30;
    limit_conn_zone $binary_remote_addr zone=addr:5m;
    limit_conn addr 100;

    #keepalive_timeout  0;
    keepalive_timeout  30;

    #gzip  on;
    
    gzip  on;
    gzip_disable "msie6";
    gzip_proxied any;
    gzip_min_length 1000;
    gzip_comp_level 4;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    open_file_cache max=100000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    

    server {
        listen       80;
        server_name  服务器ip，需要替换;
        charset utf-8;

        large_client_header_buffers 4 16k;
        client_max_body_size 300m;
        client_body_buffer_size 128k;
        proxy_connect_timeout 600;
        proxy_read_timeout 600;
        proxy_send_timeout 600;
        proxy_buffer_size 64k;
        proxy_buffers   4 32k;
        proxy_busy_buffers_size 64k;
        proxy_temp_file_write_size 64k;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            autoindex off;
        }

#       location ^~ /msg_http/ {
#	    proxy_redirect          off;
#            proxy_set_header        Host            $host;
#            proxy_set_header        X-Real-IP       $remote_addr;
#            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
#            client_max_body_size    10m;
#            client_body_buffer_size 128k;
#            proxy_buffers           32 4k;
#            proxy_connect_timeout   3;
#            proxy_send_timeout      30;
#            proxy_read_timeout      30;
#            proxy_pass http://sg;
#	}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
